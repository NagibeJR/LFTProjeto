Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    BOOLEAN
    BREAK
    CASE
    CATCH
    COLON
    CONST
    CONTINUE
    DEBUGGER
    DECLARE
    DEFAULT
    DELETE
    DO
    DOT
    ENUM
    EXPORT
    EXTENDS
    FINALLY
    FROM
    GET
    IMPLEMENTS
    IMPORT
    IN
    INFER
    INSTANCEOF
    INTERFACE
    IS
    KEYOF
    LBRACKET
    LET
    MODULE
    NAMESPACE
    NEVER
    OBJECT
    PACKAGE
    PRIVATE
    PROTECTED
    PUBLIC
    RBRACKET
    READONLY
    REQUIRE
    RETURN
    SET
    STATIC
    SUPER
    SWITCH
    SYMBOL
    THIS
    THROW
    TRY
    TYPE
    TYPEOF
    UNIQUE
    UNKNOWN
    VAR
    VOID
    WITH
    YIELD

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statement
Rule 3     statements -> statement statements
Rule 4     statement -> IDENTIFIER ASSIGN expression SEMICOLON
Rule 5     statement -> IF LPAREN expression RPAREN statement
Rule 6     statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 7     statement -> WHILE LPAREN expression RPAREN statement
Rule 8     statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
Rule 9     statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block
Rule 10    statement -> CLASS IDENTIFIER block
Rule 11    params -> IDENTIFIER
Rule 12    params -> IDENTIFIER COMMA params
Rule 13    block -> LBRACE statements RBRACE
Rule 14    block -> LBRACE RBRACE
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression MOD expression
Rule 20    expression -> expression EQ expression
Rule 21    expression -> expression NEQ expression
Rule 22    expression -> expression LT expression
Rule 23    expression -> expression LE expression
Rule 24    expression -> expression GT expression
Rule 25    expression -> expression GE expression
Rule 26    expression -> expression AND expression
Rule 27    expression -> expression OR expression
Rule 28    expression -> NOT expression
Rule 29    expression -> LPAREN expression RPAREN
Rule 30    expression -> NUMBER
Rule 31    expression -> STRING
Rule 32    expression -> TRUE
Rule 33    expression -> FALSE
Rule 34    expression -> NULL
Rule 35    expression -> IDENTIFIER
Rule 36    expression -> IDENTIFIER LPAREN args RPAREN
Rule 37    expression -> NEW IDENTIFIER LPAREN RPAREN
Rule 38    args -> expression
Rule 39    args -> expression COMMA args

Terminals, with rules where they appear

AND                  : 26
AS                   : 
ASSIGN               : 4
BOOLEAN              : 
BREAK                : 
CASE                 : 
CATCH                : 
CLASS                : 10
COLON                : 
COMMA                : 12 39
CONST                : 
CONTINUE             : 
DEBUGGER             : 
DECLARE              : 
DEFAULT              : 
DELETE               : 
DIVIDE               : 18
DO                   : 
DOT                  : 
ELSE                 : 6
ENUM                 : 
EQ                   : 20
EXPORT               : 
EXTENDS              : 
FALSE                : 33
FINALLY              : 
FOR                  : 8
FROM                 : 
FUNCTION             : 9
GE                   : 25
GET                  : 
GT                   : 24
IDENTIFIER           : 4 9 10 11 12 35 36 37
IF                   : 5 6
IMPLEMENTS           : 
IMPORT               : 
IN                   : 
INFER                : 
INSTANCEOF           : 
INTERFACE            : 
IS                   : 
KEYOF                : 
LBRACE               : 13 14
LBRACKET             : 
LE                   : 23
LET                  : 
LPAREN               : 5 6 7 8 9 29 36 37
LT                   : 22
MINUS                : 16
MOD                  : 19
MODULE               : 
NAMESPACE            : 
NEQ                  : 21
NEVER                : 
NEW                  : 37
NOT                  : 28
NULL                 : 34
NUMBER               : 30
OBJECT               : 
OR                   : 27
PACKAGE              : 
PLUS                 : 15
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 13 14
RBRACKET             : 
READONLY             : 
REQUIRE              : 
RETURN               : 
RPAREN               : 5 6 7 8 9 29 36 37
SEMICOLON            : 4 8 8
SET                  : 
STATIC               : 
STRING               : 31
SUPER                : 
SWITCH               : 
SYMBOL               : 
THIS                 : 
THROW                : 
TIMES                : 17
TRUE                 : 32
TRY                  : 
TYPE                 : 
TYPEOF               : 
UNIQUE               : 
UNKNOWN              : 
VAR                  : 
VOID                 : 
WHILE                : 7
WITH                 : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

args                 : 36 39
block                : 9 10
expression           : 4 5 6 7 8 8 8 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 27 28 29 38 39
params               : 9 12
program              : 0
statement            : 2 3 5 6 6 7 8
statements           : 1 3 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .

    $end            reduce using rule 1 (program -> statements .)


state 3

    (2) statements -> statement .
    (3) statements -> statement . statements
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    $end            reduce using rule 2 (statements -> statement .)
    RBRACE          reduce using rule 2 (statements -> statement .)
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statement                      shift and go to state 3
    statements                     shift and go to state 10

state 4

    (4) statement -> IDENTIFIER . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 11


state 5

    (5) statement -> IF . LPAREN expression RPAREN statement
    (6) statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 12


state 6

    (7) statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 13


state 7

    (8) statement -> FOR . LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement

    LPAREN          shift and go to state 14


state 8

    (9) statement -> FUNCTION . IDENTIFIER LPAREN params RPAREN block

    IDENTIFIER      shift and go to state 15


state 9

    (10) statement -> CLASS . IDENTIFIER block

    IDENTIFIER      shift and go to state 16


state 10

    (3) statements -> statement statements .

    $end            reduce using rule 3 (statements -> statement statements .)
    RBRACE          reduce using rule 3 (statements -> statement statements .)


state 11

    (4) statement -> IDENTIFIER ASSIGN . expression SEMICOLON
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 18

state 12

    (5) statement -> IF LPAREN . expression RPAREN statement
    (6) statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 27

state 13

    (7) statement -> WHILE LPAREN . expression RPAREN statement
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 28

state 14

    (8) statement -> FOR LPAREN . expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 29

state 15

    (9) statement -> FUNCTION IDENTIFIER . LPAREN params RPAREN block

    LPAREN          shift and go to state 30


state 16

    (10) statement -> CLASS IDENTIFIER . block
    (13) block -> . LBRACE statements RBRACE
    (14) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 31

state 17

    (35) expression -> IDENTIFIER .
    (36) expression -> IDENTIFIER . LPAREN args RPAREN

    SEMICOLON       reduce using rule 35 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 35 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 35 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 35 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 35 (expression -> IDENTIFIER .)
    MOD             reduce using rule 35 (expression -> IDENTIFIER .)
    EQ              reduce using rule 35 (expression -> IDENTIFIER .)
    NEQ             reduce using rule 35 (expression -> IDENTIFIER .)
    LT              reduce using rule 35 (expression -> IDENTIFIER .)
    LE              reduce using rule 35 (expression -> IDENTIFIER .)
    GT              reduce using rule 35 (expression -> IDENTIFIER .)
    GE              reduce using rule 35 (expression -> IDENTIFIER .)
    AND             reduce using rule 35 (expression -> IDENTIFIER .)
    OR              reduce using rule 35 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 35 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 35 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 33


state 18

    (4) statement -> IDENTIFIER ASSIGN expression . SEMICOLON
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       shift and go to state 34
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 19

    (28) expression -> NOT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 48

state 20

    (29) expression -> LPAREN . expression RPAREN
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 49

state 21

    (30) expression -> NUMBER .

    SEMICOLON       reduce using rule 30 (expression -> NUMBER .)
    PLUS            reduce using rule 30 (expression -> NUMBER .)
    MINUS           reduce using rule 30 (expression -> NUMBER .)
    TIMES           reduce using rule 30 (expression -> NUMBER .)
    DIVIDE          reduce using rule 30 (expression -> NUMBER .)
    MOD             reduce using rule 30 (expression -> NUMBER .)
    EQ              reduce using rule 30 (expression -> NUMBER .)
    NEQ             reduce using rule 30 (expression -> NUMBER .)
    LT              reduce using rule 30 (expression -> NUMBER .)
    LE              reduce using rule 30 (expression -> NUMBER .)
    GT              reduce using rule 30 (expression -> NUMBER .)
    GE              reduce using rule 30 (expression -> NUMBER .)
    AND             reduce using rule 30 (expression -> NUMBER .)
    OR              reduce using rule 30 (expression -> NUMBER .)
    RPAREN          reduce using rule 30 (expression -> NUMBER .)
    COMMA           reduce using rule 30 (expression -> NUMBER .)


state 22

    (31) expression -> STRING .

    SEMICOLON       reduce using rule 31 (expression -> STRING .)
    PLUS            reduce using rule 31 (expression -> STRING .)
    MINUS           reduce using rule 31 (expression -> STRING .)
    TIMES           reduce using rule 31 (expression -> STRING .)
    DIVIDE          reduce using rule 31 (expression -> STRING .)
    MOD             reduce using rule 31 (expression -> STRING .)
    EQ              reduce using rule 31 (expression -> STRING .)
    NEQ             reduce using rule 31 (expression -> STRING .)
    LT              reduce using rule 31 (expression -> STRING .)
    LE              reduce using rule 31 (expression -> STRING .)
    GT              reduce using rule 31 (expression -> STRING .)
    GE              reduce using rule 31 (expression -> STRING .)
    AND             reduce using rule 31 (expression -> STRING .)
    OR              reduce using rule 31 (expression -> STRING .)
    RPAREN          reduce using rule 31 (expression -> STRING .)
    COMMA           reduce using rule 31 (expression -> STRING .)


state 23

    (32) expression -> TRUE .

    SEMICOLON       reduce using rule 32 (expression -> TRUE .)
    PLUS            reduce using rule 32 (expression -> TRUE .)
    MINUS           reduce using rule 32 (expression -> TRUE .)
    TIMES           reduce using rule 32 (expression -> TRUE .)
    DIVIDE          reduce using rule 32 (expression -> TRUE .)
    MOD             reduce using rule 32 (expression -> TRUE .)
    EQ              reduce using rule 32 (expression -> TRUE .)
    NEQ             reduce using rule 32 (expression -> TRUE .)
    LT              reduce using rule 32 (expression -> TRUE .)
    LE              reduce using rule 32 (expression -> TRUE .)
    GT              reduce using rule 32 (expression -> TRUE .)
    GE              reduce using rule 32 (expression -> TRUE .)
    AND             reduce using rule 32 (expression -> TRUE .)
    OR              reduce using rule 32 (expression -> TRUE .)
    RPAREN          reduce using rule 32 (expression -> TRUE .)
    COMMA           reduce using rule 32 (expression -> TRUE .)


state 24

    (33) expression -> FALSE .

    SEMICOLON       reduce using rule 33 (expression -> FALSE .)
    PLUS            reduce using rule 33 (expression -> FALSE .)
    MINUS           reduce using rule 33 (expression -> FALSE .)
    TIMES           reduce using rule 33 (expression -> FALSE .)
    DIVIDE          reduce using rule 33 (expression -> FALSE .)
    MOD             reduce using rule 33 (expression -> FALSE .)
    EQ              reduce using rule 33 (expression -> FALSE .)
    NEQ             reduce using rule 33 (expression -> FALSE .)
    LT              reduce using rule 33 (expression -> FALSE .)
    LE              reduce using rule 33 (expression -> FALSE .)
    GT              reduce using rule 33 (expression -> FALSE .)
    GE              reduce using rule 33 (expression -> FALSE .)
    AND             reduce using rule 33 (expression -> FALSE .)
    OR              reduce using rule 33 (expression -> FALSE .)
    RPAREN          reduce using rule 33 (expression -> FALSE .)
    COMMA           reduce using rule 33 (expression -> FALSE .)


state 25

    (34) expression -> NULL .

    SEMICOLON       reduce using rule 34 (expression -> NULL .)
    PLUS            reduce using rule 34 (expression -> NULL .)
    MINUS           reduce using rule 34 (expression -> NULL .)
    TIMES           reduce using rule 34 (expression -> NULL .)
    DIVIDE          reduce using rule 34 (expression -> NULL .)
    MOD             reduce using rule 34 (expression -> NULL .)
    EQ              reduce using rule 34 (expression -> NULL .)
    NEQ             reduce using rule 34 (expression -> NULL .)
    LT              reduce using rule 34 (expression -> NULL .)
    LE              reduce using rule 34 (expression -> NULL .)
    GT              reduce using rule 34 (expression -> NULL .)
    GE              reduce using rule 34 (expression -> NULL .)
    AND             reduce using rule 34 (expression -> NULL .)
    OR              reduce using rule 34 (expression -> NULL .)
    RPAREN          reduce using rule 34 (expression -> NULL .)
    COMMA           reduce using rule 34 (expression -> NULL .)


state 26

    (37) expression -> NEW . IDENTIFIER LPAREN RPAREN

    IDENTIFIER      shift and go to state 50


state 27

    (5) statement -> IF LPAREN expression . RPAREN statement
    (6) statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 28

    (7) statement -> WHILE LPAREN expression . RPAREN statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 29

    (8) statement -> FOR LPAREN expression . SEMICOLON expression SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       shift and go to state 53
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 30

    (9) statement -> FUNCTION IDENTIFIER LPAREN . params RPAREN block
    (11) params -> . IDENTIFIER
    (12) params -> . IDENTIFIER COMMA params

    IDENTIFIER      shift and go to state 54

    params                         shift and go to state 55

state 31

    (10) statement -> CLASS IDENTIFIER block .

    IDENTIFIER      reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    IF              reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    WHILE           reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    FOR             reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    FUNCTION        reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    CLASS           reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    $end            reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    RBRACE          reduce using rule 10 (statement -> CLASS IDENTIFIER block .)
    ELSE            reduce using rule 10 (statement -> CLASS IDENTIFIER block .)


state 32

    (13) block -> LBRACE . statements RBRACE
    (14) block -> LBRACE . RBRACE
    (2) statements -> . statement
    (3) statements -> . statement statements
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    RBRACE          shift and go to state 57
    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statements                     shift and go to state 56
    statement                      shift and go to state 3

state 33

    (36) expression -> IDENTIFIER LPAREN . args RPAREN
    (38) args -> . expression
    (39) args -> . expression COMMA args
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    args                           shift and go to state 58
    expression                     shift and go to state 59

state 34

    (4) statement -> IDENTIFIER ASSIGN expression SEMICOLON .

    IDENTIFIER      reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    IF              reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FOR             reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    FUNCTION        reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    CLASS           reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    $end            reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)
    ELSE            reduce using rule 4 (statement -> IDENTIFIER ASSIGN expression SEMICOLON .)


state 35

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 60

state 36

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 61

state 37

    (17) expression -> expression TIMES . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 62

state 38

    (18) expression -> expression DIVIDE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 63

state 39

    (19) expression -> expression MOD . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 64

state 40

    (20) expression -> expression EQ . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 65

state 41

    (21) expression -> expression NEQ . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 66

state 42

    (22) expression -> expression LT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 67

state 43

    (23) expression -> expression LE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 68

state 44

    (24) expression -> expression GT . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 69

state 45

    (25) expression -> expression GE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 70

state 46

    (26) expression -> expression AND . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 71

state 47

    (27) expression -> expression OR . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 72

state 48

    (28) expression -> NOT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 28 (expression -> NOT expression .)
    PLUS            reduce using rule 28 (expression -> NOT expression .)
    MINUS           reduce using rule 28 (expression -> NOT expression .)
    TIMES           reduce using rule 28 (expression -> NOT expression .)
    DIVIDE          reduce using rule 28 (expression -> NOT expression .)
    MOD             reduce using rule 28 (expression -> NOT expression .)
    EQ              reduce using rule 28 (expression -> NOT expression .)
    NEQ             reduce using rule 28 (expression -> NOT expression .)
    LT              reduce using rule 28 (expression -> NOT expression .)
    LE              reduce using rule 28 (expression -> NOT expression .)
    GT              reduce using rule 28 (expression -> NOT expression .)
    GE              reduce using rule 28 (expression -> NOT expression .)
    AND             reduce using rule 28 (expression -> NOT expression .)
    OR              reduce using rule 28 (expression -> NOT expression .)
    RPAREN          reduce using rule 28 (expression -> NOT expression .)
    COMMA           reduce using rule 28 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]


state 49

    (29) expression -> LPAREN expression . RPAREN
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 50

    (37) expression -> NEW IDENTIFIER . LPAREN RPAREN

    LPAREN          shift and go to state 74


state 51

    (5) statement -> IF LPAREN expression RPAREN . statement
    (6) statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statement                      shift and go to state 75

state 52

    (7) statement -> WHILE LPAREN expression RPAREN . statement
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statement                      shift and go to state 76

state 53

    (8) statement -> FOR LPAREN expression SEMICOLON . expression SEMICOLON expression RPAREN statement
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 77

state 54

    (11) params -> IDENTIFIER .
    (12) params -> IDENTIFIER . COMMA params

    RPAREN          reduce using rule 11 (params -> IDENTIFIER .)
    COMMA           shift and go to state 78


state 55

    (9) statement -> FUNCTION IDENTIFIER LPAREN params . RPAREN block

    RPAREN          shift and go to state 79


state 56

    (13) block -> LBRACE statements . RBRACE

    RBRACE          shift and go to state 80


state 57

    (14) block -> LBRACE RBRACE .

    IDENTIFIER      reduce using rule 14 (block -> LBRACE RBRACE .)
    IF              reduce using rule 14 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 14 (block -> LBRACE RBRACE .)
    FOR             reduce using rule 14 (block -> LBRACE RBRACE .)
    FUNCTION        reduce using rule 14 (block -> LBRACE RBRACE .)
    CLASS           reduce using rule 14 (block -> LBRACE RBRACE .)
    $end            reduce using rule 14 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 14 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 14 (block -> LBRACE RBRACE .)


state 58

    (36) expression -> IDENTIFIER LPAREN args . RPAREN

    RPAREN          shift and go to state 81


state 59

    (38) args -> expression .
    (39) args -> expression . COMMA args
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    RPAREN          reduce using rule 38 (args -> expression .)
    COMMA           shift and go to state 82
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 60

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! EQ              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! NEQ             [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! LT              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! LE              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! GT              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! GE              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 61

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! EQ              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! NEQ             [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! LT              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! LE              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! GT              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! GE              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]


state 62

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    MOD             reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 17 (expression -> expression TIMES expression .)
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! EQ              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! NEQ             [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! LT              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! LE              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! GT              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! GE              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! AND             [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! OR              [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]


state 63

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 18 (expression -> expression DIVIDE expression .)
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! EQ              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! NEQ             [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! LT              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! LE              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! GT              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! GE              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! AND             [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! OR              [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]


state 64

    (19) expression -> expression MOD expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 19 (expression -> expression MOD expression .)
    PLUS            reduce using rule 19 (expression -> expression MOD expression .)
    MINUS           reduce using rule 19 (expression -> expression MOD expression .)
    TIMES           reduce using rule 19 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 19 (expression -> expression MOD expression .)
    MOD             reduce using rule 19 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 19 (expression -> expression MOD expression .)
    COMMA           reduce using rule 19 (expression -> expression MOD expression .)
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! EQ              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! NEQ             [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! LT              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! LE              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! GT              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! GE              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! AND             [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! OR              [ reduce using rule 19 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]


state 65

    (20) expression -> expression EQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 20 (expression -> expression EQ expression .)
    PLUS            reduce using rule 20 (expression -> expression EQ expression .)
    MINUS           reduce using rule 20 (expression -> expression EQ expression .)
    TIMES           reduce using rule 20 (expression -> expression EQ expression .)
    DIVIDE          reduce using rule 20 (expression -> expression EQ expression .)
    MOD             reduce using rule 20 (expression -> expression EQ expression .)
    EQ              reduce using rule 20 (expression -> expression EQ expression .)
    NEQ             reduce using rule 20 (expression -> expression EQ expression .)
    LT              reduce using rule 20 (expression -> expression EQ expression .)
    LE              reduce using rule 20 (expression -> expression EQ expression .)
    GT              reduce using rule 20 (expression -> expression EQ expression .)
    GE              reduce using rule 20 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 20 (expression -> expression EQ expression .)
    COMMA           reduce using rule 20 (expression -> expression EQ expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! OR              [ reduce using rule 20 (expression -> expression EQ expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 66

    (21) expression -> expression NEQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 21 (expression -> expression NEQ expression .)
    PLUS            reduce using rule 21 (expression -> expression NEQ expression .)
    MINUS           reduce using rule 21 (expression -> expression NEQ expression .)
    TIMES           reduce using rule 21 (expression -> expression NEQ expression .)
    DIVIDE          reduce using rule 21 (expression -> expression NEQ expression .)
    MOD             reduce using rule 21 (expression -> expression NEQ expression .)
    EQ              reduce using rule 21 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 21 (expression -> expression NEQ expression .)
    LT              reduce using rule 21 (expression -> expression NEQ expression .)
    LE              reduce using rule 21 (expression -> expression NEQ expression .)
    GT              reduce using rule 21 (expression -> expression NEQ expression .)
    GE              reduce using rule 21 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 21 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 21 (expression -> expression NEQ expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! OR              [ reduce using rule 21 (expression -> expression NEQ expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 67

    (22) expression -> expression LT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 22 (expression -> expression LT expression .)
    PLUS            reduce using rule 22 (expression -> expression LT expression .)
    MINUS           reduce using rule 22 (expression -> expression LT expression .)
    TIMES           reduce using rule 22 (expression -> expression LT expression .)
    DIVIDE          reduce using rule 22 (expression -> expression LT expression .)
    MOD             reduce using rule 22 (expression -> expression LT expression .)
    EQ              reduce using rule 22 (expression -> expression LT expression .)
    NEQ             reduce using rule 22 (expression -> expression LT expression .)
    LT              reduce using rule 22 (expression -> expression LT expression .)
    LE              reduce using rule 22 (expression -> expression LT expression .)
    GT              reduce using rule 22 (expression -> expression LT expression .)
    GE              reduce using rule 22 (expression -> expression LT expression .)
    RPAREN          reduce using rule 22 (expression -> expression LT expression .)
    COMMA           reduce using rule 22 (expression -> expression LT expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! OR              [ reduce using rule 22 (expression -> expression LT expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 68

    (23) expression -> expression LE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 23 (expression -> expression LE expression .)
    PLUS            reduce using rule 23 (expression -> expression LE expression .)
    MINUS           reduce using rule 23 (expression -> expression LE expression .)
    TIMES           reduce using rule 23 (expression -> expression LE expression .)
    DIVIDE          reduce using rule 23 (expression -> expression LE expression .)
    MOD             reduce using rule 23 (expression -> expression LE expression .)
    EQ              reduce using rule 23 (expression -> expression LE expression .)
    NEQ             reduce using rule 23 (expression -> expression LE expression .)
    LT              reduce using rule 23 (expression -> expression LE expression .)
    LE              reduce using rule 23 (expression -> expression LE expression .)
    GT              reduce using rule 23 (expression -> expression LE expression .)
    GE              reduce using rule 23 (expression -> expression LE expression .)
    RPAREN          reduce using rule 23 (expression -> expression LE expression .)
    COMMA           reduce using rule 23 (expression -> expression LE expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression LE expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 69

    (24) expression -> expression GT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 24 (expression -> expression GT expression .)
    PLUS            reduce using rule 24 (expression -> expression GT expression .)
    MINUS           reduce using rule 24 (expression -> expression GT expression .)
    TIMES           reduce using rule 24 (expression -> expression GT expression .)
    DIVIDE          reduce using rule 24 (expression -> expression GT expression .)
    MOD             reduce using rule 24 (expression -> expression GT expression .)
    EQ              reduce using rule 24 (expression -> expression GT expression .)
    NEQ             reduce using rule 24 (expression -> expression GT expression .)
    LT              reduce using rule 24 (expression -> expression GT expression .)
    LE              reduce using rule 24 (expression -> expression GT expression .)
    GT              reduce using rule 24 (expression -> expression GT expression .)
    GE              reduce using rule 24 (expression -> expression GT expression .)
    RPAREN          reduce using rule 24 (expression -> expression GT expression .)
    COMMA           reduce using rule 24 (expression -> expression GT expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression GT expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 70

    (25) expression -> expression GE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 25 (expression -> expression GE expression .)
    PLUS            reduce using rule 25 (expression -> expression GE expression .)
    MINUS           reduce using rule 25 (expression -> expression GE expression .)
    TIMES           reduce using rule 25 (expression -> expression GE expression .)
    DIVIDE          reduce using rule 25 (expression -> expression GE expression .)
    MOD             reduce using rule 25 (expression -> expression GE expression .)
    EQ              reduce using rule 25 (expression -> expression GE expression .)
    NEQ             reduce using rule 25 (expression -> expression GE expression .)
    LT              reduce using rule 25 (expression -> expression GE expression .)
    LE              reduce using rule 25 (expression -> expression GE expression .)
    GT              reduce using rule 25 (expression -> expression GE expression .)
    GE              reduce using rule 25 (expression -> expression GE expression .)
    RPAREN          reduce using rule 25 (expression -> expression GE expression .)
    COMMA           reduce using rule 25 (expression -> expression GE expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47

  ! AND             [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression GE expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]


state 71

    (26) expression -> expression AND expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 26 (expression -> expression AND expression .)
    PLUS            reduce using rule 26 (expression -> expression AND expression .)
    MINUS           reduce using rule 26 (expression -> expression AND expression .)
    TIMES           reduce using rule 26 (expression -> expression AND expression .)
    DIVIDE          reduce using rule 26 (expression -> expression AND expression .)
    MOD             reduce using rule 26 (expression -> expression AND expression .)
    EQ              reduce using rule 26 (expression -> expression AND expression .)
    NEQ             reduce using rule 26 (expression -> expression AND expression .)
    LT              reduce using rule 26 (expression -> expression AND expression .)
    LE              reduce using rule 26 (expression -> expression AND expression .)
    GT              reduce using rule 26 (expression -> expression AND expression .)
    GE              reduce using rule 26 (expression -> expression AND expression .)
    AND             reduce using rule 26 (expression -> expression AND expression .)
    RPAREN          reduce using rule 26 (expression -> expression AND expression .)
    COMMA           reduce using rule 26 (expression -> expression AND expression .)
    OR              shift and go to state 47

  ! OR              [ reduce using rule 26 (expression -> expression AND expression .) ]
  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]


state 72

    (27) expression -> expression OR expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       reduce using rule 27 (expression -> expression OR expression .)
    PLUS            reduce using rule 27 (expression -> expression OR expression .)
    MINUS           reduce using rule 27 (expression -> expression OR expression .)
    TIMES           reduce using rule 27 (expression -> expression OR expression .)
    DIVIDE          reduce using rule 27 (expression -> expression OR expression .)
    MOD             reduce using rule 27 (expression -> expression OR expression .)
    EQ              reduce using rule 27 (expression -> expression OR expression .)
    NEQ             reduce using rule 27 (expression -> expression OR expression .)
    LT              reduce using rule 27 (expression -> expression OR expression .)
    LE              reduce using rule 27 (expression -> expression OR expression .)
    GT              reduce using rule 27 (expression -> expression OR expression .)
    GE              reduce using rule 27 (expression -> expression OR expression .)
    AND             reduce using rule 27 (expression -> expression OR expression .)
    OR              reduce using rule 27 (expression -> expression OR expression .)
    RPAREN          reduce using rule 27 (expression -> expression OR expression .)
    COMMA           reduce using rule 27 (expression -> expression OR expression .)

  ! PLUS            [ shift and go to state 35 ]
  ! MINUS           [ shift and go to state 36 ]
  ! TIMES           [ shift and go to state 37 ]
  ! DIVIDE          [ shift and go to state 38 ]
  ! MOD             [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NEQ             [ shift and go to state 41 ]
  ! LT              [ shift and go to state 42 ]
  ! LE              [ shift and go to state 43 ]
  ! GT              [ shift and go to state 44 ]
  ! GE              [ shift and go to state 45 ]
  ! AND             [ shift and go to state 46 ]
  ! OR              [ shift and go to state 47 ]


state 73

    (29) expression -> LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    GE              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 29 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 29 (expression -> LPAREN expression RPAREN .)


state 74

    (37) expression -> NEW IDENTIFIER LPAREN . RPAREN

    RPAREN          shift and go to state 83


state 75

    (5) statement -> IF LPAREN expression RPAREN statement .
    (6) statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    IDENTIFIER      reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 84

  ! ELSE            [ reduce using rule 5 (statement -> IF LPAREN expression RPAREN statement .) ]


state 76

    (7) statement -> WHILE LPAREN expression RPAREN statement .

    IDENTIFIER      reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    FUNCTION        reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    CLASS           reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 7 (statement -> WHILE LPAREN expression RPAREN statement .)


state 77

    (8) statement -> FOR LPAREN expression SEMICOLON expression . SEMICOLON expression RPAREN statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    SEMICOLON       shift and go to state 85
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 78

    (12) params -> IDENTIFIER COMMA . params
    (11) params -> . IDENTIFIER
    (12) params -> . IDENTIFIER COMMA params

    IDENTIFIER      shift and go to state 54

    params                         shift and go to state 86

state 79

    (9) statement -> FUNCTION IDENTIFIER LPAREN params RPAREN . block
    (13) block -> . LBRACE statements RBRACE
    (14) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 32

    block                          shift and go to state 87

state 80

    (13) block -> LBRACE statements RBRACE .

    IDENTIFIER      reduce using rule 13 (block -> LBRACE statements RBRACE .)
    IF              reduce using rule 13 (block -> LBRACE statements RBRACE .)
    WHILE           reduce using rule 13 (block -> LBRACE statements RBRACE .)
    FOR             reduce using rule 13 (block -> LBRACE statements RBRACE .)
    FUNCTION        reduce using rule 13 (block -> LBRACE statements RBRACE .)
    CLASS           reduce using rule 13 (block -> LBRACE statements RBRACE .)
    $end            reduce using rule 13 (block -> LBRACE statements RBRACE .)
    RBRACE          reduce using rule 13 (block -> LBRACE statements RBRACE .)
    ELSE            reduce using rule 13 (block -> LBRACE statements RBRACE .)


state 81

    (36) expression -> IDENTIFIER LPAREN args RPAREN .

    SEMICOLON       reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    PLUS            reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    MINUS           reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    TIMES           reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    DIVIDE          reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    MOD             reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    EQ              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    NEQ             reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    LT              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    LE              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    GT              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    GE              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    AND             reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    OR              reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)
    COMMA           reduce using rule 36 (expression -> IDENTIFIER LPAREN args RPAREN .)


state 82

    (39) args -> expression COMMA . args
    (38) args -> . expression
    (39) args -> . expression COMMA args
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 59
    args                           shift and go to state 88

state 83

    (37) expression -> NEW IDENTIFIER LPAREN RPAREN .

    SEMICOLON       reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    PLUS            reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    MINUS           reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    TIMES           reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    DIVIDE          reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    MOD             reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    EQ              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    NEQ             reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    LT              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    LE              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    GT              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    GE              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    AND             reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    OR              reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    RPAREN          reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)
    COMMA           reduce using rule 37 (expression -> NEW IDENTIFIER LPAREN RPAREN .)


state 84

    (6) statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statement                      shift and go to state 89

state 85

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON . expression RPAREN statement
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression MOD expression
    (20) expression -> . expression EQ expression
    (21) expression -> . expression NEQ expression
    (22) expression -> . expression LT expression
    (23) expression -> . expression LE expression
    (24) expression -> . expression GT expression
    (25) expression -> . expression GE expression
    (26) expression -> . expression AND expression
    (27) expression -> . expression OR expression
    (28) expression -> . NOT expression
    (29) expression -> . LPAREN expression RPAREN
    (30) expression -> . NUMBER
    (31) expression -> . STRING
    (32) expression -> . TRUE
    (33) expression -> . FALSE
    (34) expression -> . NULL
    (35) expression -> . IDENTIFIER
    (36) expression -> . IDENTIFIER LPAREN args RPAREN
    (37) expression -> . NEW IDENTIFIER LPAREN RPAREN

    NOT             shift and go to state 19
    LPAREN          shift and go to state 20
    NUMBER          shift and go to state 21
    STRING          shift and go to state 22
    TRUE            shift and go to state 23
    FALSE           shift and go to state 24
    NULL            shift and go to state 25
    IDENTIFIER      shift and go to state 17
    NEW             shift and go to state 26

    expression                     shift and go to state 90

state 86

    (12) params -> IDENTIFIER COMMA params .

    RPAREN          reduce using rule 12 (params -> IDENTIFIER COMMA params .)


state 87

    (9) statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .

    IDENTIFIER      reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    IF              reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    WHILE           reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    FOR             reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    FUNCTION        reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    CLASS           reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    $end            reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    RBRACE          reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)
    ELSE            reduce using rule 9 (statement -> FUNCTION IDENTIFIER LPAREN params RPAREN block .)


state 88

    (39) args -> expression COMMA args .

    RPAREN          reduce using rule 39 (args -> expression COMMA args .)


state 89

    (6) statement -> IF LPAREN expression RPAREN statement ELSE statement .

    IDENTIFIER      reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FUNCTION        reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    CLASS           reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 6 (statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 90

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression . RPAREN statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . MOD expression
    (20) expression -> expression . EQ expression
    (21) expression -> expression . NEQ expression
    (22) expression -> expression . LT expression
    (23) expression -> expression . LE expression
    (24) expression -> expression . GT expression
    (25) expression -> expression . GE expression
    (26) expression -> expression . AND expression
    (27) expression -> expression . OR expression

    RPAREN          shift and go to state 91
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    TIMES           shift and go to state 37
    DIVIDE          shift and go to state 38
    MOD             shift and go to state 39
    EQ              shift and go to state 40
    NEQ             shift and go to state 41
    LT              shift and go to state 42
    LE              shift and go to state 43
    GT              shift and go to state 44
    GE              shift and go to state 45
    AND             shift and go to state 46
    OR              shift and go to state 47


state 91

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN . statement
    (4) statement -> . IDENTIFIER ASSIGN expression SEMICOLON
    (5) statement -> . IF LPAREN expression RPAREN statement
    (6) statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (7) statement -> . WHILE LPAREN expression RPAREN statement
    (8) statement -> . FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement
    (9) statement -> . FUNCTION IDENTIFIER LPAREN params RPAREN block
    (10) statement -> . CLASS IDENTIFIER block

    IDENTIFIER      shift and go to state 4
    IF              shift and go to state 5
    WHILE           shift and go to state 6
    FOR             shift and go to state 7
    FUNCTION        shift and go to state 8
    CLASS           shift and go to state 9

    statement                      shift and go to state 92

state 92

    (8) statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .

    IDENTIFIER      reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    IF              reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    WHILE           reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FOR             reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    FUNCTION        reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    CLASS           reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    $end            reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    RBRACE          reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)
    ELSE            reduce using rule 8 (statement -> FOR LPAREN expression SEMICOLON expression SEMICOLON expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 75 resolved as shift
